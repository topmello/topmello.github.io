"use strict";(self.webpackChunksettle_aid=self.webpackChunksettle_aid||[]).push([[2903],{3905:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>m});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var u=r.createContext({}),p=function(e){var t=r.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},l=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},i="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),i=p(a),b=n,m=i["".concat(u,".").concat(b)]||i[b]||d[b]||s;return a?r.createElement(m,o(o({ref:t},l),{},{components:a})):r.createElement(m,o({ref:t},l))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,o=new Array(s);o[0]=b;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c[i]="string"==typeof e?e:n,o[1]=c;for(var p=2;p<s;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}b.displayName="MDXCreateElement"},8058:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const s={sidebar_position:5},o="Backups",c={unversionedId:"database/backup",id:"database/backup",title:"Backups",description:"Introduction",source:"@site/docs/database/backup.md",sourceDirName:"database",slug:"/database/backup",permalink:"/docs/database/backup",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"ETL Process",permalink:"/docs/database/ETL"},next:{title:"Deployment",permalink:"/docs/category/deployment"}},u={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Setup Automated Backups",id:"setup-automated-backups",level:2},{value:"Restore from fresh database",id:"restore-from-fresh-database",level:2},{value:"Change permission for backups",id:"change-permission-for-backups",level:3},{value:"Check backup volumes content",id:"check-backup-volumes-content",level:3}],l={toc:p},i="wrapper";function d(e){let{components:t,...a}=e;return(0,n.kt)(i,(0,r.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"backups"},"Backups"),(0,n.kt)("h2",{id:"introduction"},"Introduction"),(0,n.kt)("p",null,"This document provides steps to set up automated backups for a PostgreSQL database using Docker and instructions to restore from the backups."),(0,n.kt)("h2",{id:"setup-automated-backups"},"Setup Automated Backups"),(0,n.kt)("p",null,"We use the docker-postgres-backup-local image to facilitate our backup tasks. Once the service is started, this will automatically create backups of database daily and maintain."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/prodrigestivill/docker-postgres-backup-local"},"https://github.com/prodrigestivill/docker-postgres-backup-local")),(0,n.kt)("h2",{id:"restore-from-fresh-database"},"Restore from fresh database"),(0,n.kt)("p",null,"To restore a backup to a fresh database:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'docker exec -it db psql --username=db_user --dbname=postgres -c "DROP DATABASE database;"\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'docker exec -it db psql --username=db_user --dbname=postgres -c "CREATE DATABASE database;"\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'docker exec -it db psql --username=db_user --dbname=database -c "CREATE EXTENSION IF NOT EXISTS postgis;"\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'docker exec -it db psql --username=db_user --dbname=database -c "CREATE EXTENSION IF NOT EXISTS vector;"\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'sudo docker exec -it db /bin/sh -c "zcat /backups/last/database-latest.sql.gz | psql --username=db_user --dbname=database -W"\n')),(0,n.kt)("h3",{id:"change-permission-for-backups"},"Change permission for backups"),(0,n.kt)("p",null,"If necessary, adjust the permissions for the backup files."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"docker exec -u root -it db-backup chown -R 999:999 /backups\n")),(0,n.kt)("h3",{id:"check-backup-volumes-content"},"Check backup volumes content"),(0,n.kt)("p",null,"To inspect the contents of the backup volume:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo docker run --rm -it -v settle-aid_dbbackups_volume:/volume_content alpine:latest /bin/sh\n")))}d.isMDXComponent=!0}}]);