"use strict";(self.webpackChunksettle_aid=self.webpackChunksettle_aid||[]).push([[1574],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),d=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(n),h=r,k=u["".concat(s,".").concat(h)]||u[h]||c[h]||a;return n?o.createElement(k,i(i({ref:t},p),{},{components:n})):o.createElement(k,i({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var d=2;d<a;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},2368:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:8,title:"Keyboard Event"},i="Keyboard Event",l={unversionedId:"frontend/keyboard-event",id:"frontend/keyboard-event",title:"Keyboard Event",description:"Sometimes, we need to hide the bottom bit of the applicaton when the system keyboard pops up to prevent more important text inputs to be unreachable for users. For example, when user click on username input field, the",source:"@site/docs/frontend/keyboard-event.md",sourceDirName:"frontend",slug:"/frontend/keyboard-event",permalink:"/docs/frontend/keyboard-event",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"Keyboard Event"},sidebar:"tutorialSidebar",previous:{title:"Location Sharing",permalink:"/docs/frontend/location-sharing"},next:{title:"Session Management",permalink:"/docs/frontend/session"}},s={},d=[{value:"<code>useKeyboardEvent</code> Hook",id:"usekeyboardevent-hook",level:2},{value:"Overview",id:"overview",level:3},{value:"Installation",id:"installation",level:3},{value:"Usage",id:"usage",level:3},{value:"Hook Return Values",id:"hook-return-values",level:3},{value:"Under the Hood",id:"under-the-hood",level:3},{value:"Best Practices",id:"best-practices",level:3}],p={toc:d},u="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"keyboard-event"},"Keyboard Event"),(0,r.kt)("p",null,"Sometimes, we need to hide the bottom bit of the applicaton when the system keyboard pops up to prevent more important text inputs to be unreachable for users. For example, when user click on username input field, the "),(0,r.kt)("h2",{id:"usekeyboardevent-hook"},(0,r.kt)("inlineCode",{parentName:"h2"},"useKeyboardEvent")," Hook"),(0,r.kt)("p",null,"React Native offers a rich API set for various device-specific behaviors, one of which is keyboard interactions. Built atop React Native's ",(0,r.kt)("inlineCode",{parentName:"p"},"Keyboard")," API, the ",(0,r.kt)("inlineCode",{parentName:"p"},"useKeyboardEvent")," hook provides a seamless way to track the keyboard's visibility state within the lifecycle of your React components."),(0,r.kt)("h3",{id:"overview"},"Overview"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"useKeyboardEvent")," hook provides an abstraction to listen for keyboard show/hide events and maintain the current visibility state of the keyboard. With this, developers can effortlessly implement responsive designs or functionalities that depend on the keyboard's state."),(0,r.kt)("h3",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Before diving into the ",(0,r.kt)("inlineCode",{parentName:"p"},"useKeyboardEvent")," hook, ensure that you have ",(0,r.kt)("inlineCode",{parentName:"p"},"react-native")," set up in your project:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install react-native\n")),(0,r.kt)("h3",{id:"usage"},"Usage"),(0,r.kt)("p",null,"Here's a simple example of how you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"useKeyboardEvent")," hook:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useKeyboardEvent } from 'path-to-your-hook';\n\nfunction YourComponent() {\n  const { keyboardShow } = useKeyboardEvent();\n\n  return (\n    // Your component JSX\n  );\n}\n")),(0,r.kt)("h3",{id:"hook-return-values"},"Hook Return Values"),(0,r.kt)("p",null,"When you invoke the ",(0,r.kt)("inlineCode",{parentName:"p"},"useKeyboardEvent")," hook, it returns an object containing:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"keyboardShow (",(0,r.kt)("inlineCode",{parentName:"strong"},"boolean"),"):")," A boolean indicating the current visibility state of the keyboard. It's ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," when the keyboard is visible and ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," otherwise.")),(0,r.kt)("h3",{id:"under-the-hood"},"Under the Hood"),(0,r.kt)("p",null,"Internally, the hook leverages React Native's ",(0,r.kt)("inlineCode",{parentName:"p"},"Keyboard")," API to listen for keyboard visibility events:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"keyboardDidShow")," event updates the state to indicate the keyboard is visible."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"keyboardDidHide")," event updates the state to indicate the keyboard is hidden.")),(0,r.kt)("p",null,"Listeners are cleaned up appropriately to prevent potential memory leaks."),(0,r.kt)("h3",{id:"best-practices"},"Best Practices"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ensure that the ",(0,r.kt)("inlineCode",{parentName:"li"},"useKeyboardEvent")," hook is invoked within the body of a functional React component."),(0,r.kt)("li",{parentName:"ul"},"Utilize the ",(0,r.kt)("inlineCode",{parentName:"li"},"keyboardShow")," state to make UI adjustments, animate components, or change functionalities based on the keyboard's visibility state.")))}c.isMDXComponent=!0}}]);