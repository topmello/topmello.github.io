"use strict";(self.webpackChunksettle_aid=self.webpackChunksettle_aid||[]).push([[2068],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),s=a,g=d["".concat(p,".").concat(s)]||d[s]||m[s]||o;return n?r.createElement(g,l(l({ref:t},c),{},{components:n})):r.createElement(g,l({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=s;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},5348:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={},l="Frontend Demo Server",i={unversionedId:"deployment/frontend-demo-server",id:"deployment/frontend-demo-server",title:"Frontend Demo Server",description:"Build Image by trigger Github Action",source:"@site/docs/deployment/frontend-demo-server.md",sourceDirName:"deployment",slug:"/deployment/frontend-demo-server",permalink:"/docs/deployment/frontend-demo-server",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Frontend Build",permalink:"/docs/deployment/frontend-build"},next:{title:"Data Management Plan",permalink:"/docs/category/data-management-plan"}},p={},u=[{value:"Build Image by trigger Github Action",id:"build-image-by-trigger-github-action",level:2},{value:"Pull Image in GCP and Run Container",id:"pull-image-in-gcp-and-run-container",level:2}],c={toc:u},d="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"frontend-demo-server"},"Frontend Demo Server"),(0,a.kt)("h2",{id:"build-image-by-trigger-github-action"},"Build Image by trigger Github Action"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Switch to deploy branch by ",(0,a.kt)("inlineCode",{parentName:"li"},"git switch deploy")),(0,a.kt)("li",{parentName:"ul"},"Merge from main branch by ",(0,a.kt)("inlineCode",{parentName:"li"},"git merge main")),(0,a.kt)("li",{parentName:"ul"},"Push to ",(0,a.kt)("inlineCode",{parentName:"li"},"deploy")," using ",(0,a.kt)("inlineCode",{parentName:"li"},"git push")," branch will trigger ",(0,a.kt)("inlineCode",{parentName:"li"},"build_push_image")," workflow"),(0,a.kt)("li",{parentName:"ul"},"The image will be pushed to ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/topmello/settle-aid-frontend/pkgs/container/settle-aid-frontend"},"GHCR"))),(0,a.kt)("h2",{id:"pull-image-in-gcp-and-run-container"},"Pull Image in GCP and Run Container"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"SSH to GCP instance")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"gcloud compute ssh <instance-name>\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"cd ..")," to go to home directory")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Pull the latest image from GHCR"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo docker-compose -f docker-compose-frontend.yaml pull\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Start the container")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo docker-compose -f docker-compose-frontend.yaml -p settle-aid up -d\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Access the container using")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo docker exec -it <frontend-container-id> bash\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Login to expo using")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npx expo login\n")))}m.isMDXComponent=!0}}]);