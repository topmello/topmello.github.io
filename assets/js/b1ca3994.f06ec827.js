"use strict";(self.webpackChunksettle_aid=self.webpackChunksettle_aid||[]).push([[9261],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>m});var i=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,i,o=function(t,e){if(null==t)return{};var n,i,o={},a=Object.keys(t);for(i=0;i<a.length;i++)n=a[i],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(i=0;i<a.length;i++)n=a[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var s=i.createContext({}),c=function(t){var e=i.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):r(r({},e),t)),n},p=function(t){var e=c(t.components);return i.createElement(s.Provider,{value:e},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},f=i.forwardRef((function(t,e){var n=t.components,o=t.mdxType,a=t.originalType,s=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),u=c(n),f=o,m=u["".concat(s,".").concat(f)]||u[f]||d[f]||a;return n?i.createElement(m,r(r({ref:e},p),{},{components:n})):i.createElement(m,r({ref:e},p))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=n.length,r=new Array(a);r[0]=f;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l[u]="string"==typeof t?t:o,r[1]=l;for(var c=2;c<a;c++)r[c]=n[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4297:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var i=n(7462),o=(n(7294),n(3905));const a={title:"Notification",sidebar_position:6},r="Notification",l={unversionedId:"frontend/notification",id:"frontend/notification",title:"Notification",description:"The implementation of global notifications is paramount for a seamless user experience. Not only do they ensure that users are constantly updated with relevant information and feedback, but they also provide a robust mechanism for error handling. When unexpected issues arise, gracefully presented notifications can guide users, preventing confusion and bolstering trust in the app's reliability and professionalism.",source:"@site/docs/frontend/notification.md",sourceDirName:"frontend",slug:"/frontend/notification",permalink:"/docs/frontend/notification",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/frontend/notification.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Notification",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Global State",permalink:"/docs/frontend/global-state-redux"},next:{title:"Location Sharing",permalink:"/docs/frontend/location-sharing"}},s={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Data Types",id:"data-types",level:2},{value:"<code>Notification</code>",id:"notification-1",level:3},{value:"<code>NotificationContextType</code>",id:"notificationcontexttype",level:3},{value:"<code>NotificationContext</code>",id:"notificationcontext",level:2},{value:"<code>NotificationProvider</code>",id:"notificationprovider",level:2},{value:"Custom Hook: <code>useNotification</code>",id:"custom-hook-usenotification",level:2}],p={toc:c},u="wrapper";function d(t){let{components:e,...n}=t;return(0,o.kt)(u,(0,i.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"notification"},"Notification"),(0,o.kt)("p",null,"The implementation of global notifications is paramount for a seamless user experience. Not only do they ensure that users are constantly updated with relevant information and feedback, but they also provide a robust mechanism for error handling. When unexpected issues arise, gracefully presented notifications can guide users, preventing confusion and bolstering trust in the app's reliability and professionalism."),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"NotificationContext.tsx")," module is designed to provide an easy and consistent way to handle notifications in your React application using the react-native-paper library. It establishes a context for notifications, allows for notification messages with different severity levels, and provides the utility to dismiss or take action on a notification.  "),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useNotification")," custom hook provide a gateway to easy push notification to users. It returns an object containing the ",(0,o.kt)("inlineCode",{parentName:"p"},"pushNotification")," method detailed below."),(0,o.kt)("h2",{id:"data-types"},"Data Types"),(0,o.kt)("h3",{id:"notification-1"},(0,o.kt)("inlineCode",{parentName:"h3"},"Notification")),(0,o.kt)("p",null,"This is the structure of a notification:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"message"),": The core message of the notification."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"type"),": The severity type of the notification. It could be one of the following values:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"success")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"error")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"warning")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"info")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"timeout"),": The duration for which the notification will be displayed. Default is ",(0,o.kt)("inlineCode",{parentName:"li"},"4000")," ms."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"onDismiss"),": A callback function that will be called when the notification is dismissed."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"action"),": An optional action that the user can take on the notification. It consists of:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"label"),": The text that is displayed for the action."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"onPress"),": A callback function that will be executed when the action is taken.")))),(0,o.kt)("h3",{id:"notificationcontexttype"},(0,o.kt)("inlineCode",{parentName:"h3"},"NotificationContextType")),(0,o.kt)("p",null,"This defines the shape of the context:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"notification"),": The current active notification."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"pushNotification"),": A function to show a new notification."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"clearNotification"),": A function to clear the active notification.")),(0,o.kt)("h2",{id:"notificationcontext"},(0,o.kt)("inlineCode",{parentName:"h2"},"NotificationContext")),(0,o.kt)("p",null,"This is the main context that consumers will use to access the current notification and the functions to manipulate it. The context's default value is ",(0,o.kt)("inlineCode",{parentName:"p"},"undefined"),"."),(0,o.kt)("h2",{id:"notificationprovider"},(0,o.kt)("inlineCode",{parentName:"h2"},"NotificationProvider")),(0,o.kt)("p",null,"This component wraps around your application or a part of it and provides the ",(0,o.kt)("inlineCode",{parentName:"p"},"NotificationContext")," to its children."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"NotificationProvider")," maintains the current notification state, handles the logic for automatically dismissing a notification after its timeout, and renders the actual ",(0,o.kt)("inlineCode",{parentName:"p"},"Snackbar")," component from the ",(0,o.kt)("inlineCode",{parentName:"p"},"react-native-paper")," library to display the notification."),(0,o.kt)("h2",{id:"custom-hook-usenotification"},"Custom Hook: ",(0,o.kt)("inlineCode",{parentName:"h2"},"useNotification")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"useNotification")," hook is a custom hook designed to provide easy access to the NotificationContext from any component within your React Native application."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { useContext } from "react";\nimport { NotificationContext } from "../store/NotificationContext";\n\nexport const useNotification = () => {\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error("useNotification must be used within a NotificationProvider");\n  }\n  return context;\n};\n')),(0,o.kt)("p",null,"By using the ",(0,o.kt)("inlineCode",{parentName:"p"},"useNotification")," hook in your components, you can effortlessly interact with the notification system. It fetches the current notification context, ensuring that it's being accessed within the bounds of the ",(0,o.kt)("inlineCode",{parentName:"p"},"NotificationProvider"),". If not, it throws a useful error to remind developers of the proper usage."),(0,o.kt)("p",null,"To leverage the capabilities of the notification system in any component:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const { pushNotification } = useNotification();\n\n// in an event handler or somewhere\npushNotification({\n  message: 'This is a success message!',\n  type: 'success'\n});\n")))}d.isMDXComponent=!0}}]);