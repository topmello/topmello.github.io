"use strict";(self.webpackChunksettle_aid=self.webpackChunksettle_aid||[]).push([[6010],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>k});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(a),d=o,k=m["".concat(s,".").concat(d)]||m[d]||u[d]||r;return a?n.createElement(k,i(i({ref:t},p),{},{components:a})):n.createElement(k,i({ref:t},p))}));function k(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},1059:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var n=a(7462),o=(a(7294),a(3905));const r={title:"Location Sharing",sidebar_position:7},i="Location Sharing",l={unversionedId:"frontend/location-sharing",id:"frontend/location-sharing",title:"Location Sharing",description:"useTrack Hook Documentation",source:"@site/docs/frontend/location-sharing.md",sourceDirName:"frontend",slug:"/frontend/location-sharing",permalink:"/docs/frontend/location-sharing",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Location Sharing",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Notification",permalink:"/docs/frontend/notification"},next:{title:"Keyboard Event",permalink:"/docs/frontend/keyboard-event"}},s={},c=[{value:"<code>useTrack</code> Hook Documentation",id:"usetrack-hook-documentation",level:2},{value:"Introduction",id:"introduction",level:3},{value:"Key Features",id:"key-features",level:3},{value:"Data Types",id:"data-types",level:3},{value:"<code>MoveMessage</code>",id:"movemessage",level:4},{value:"<code>JoinMessage</code>",id:"joinmessage",level:4},{value:"<code>MessageData</code>",id:"messagedata",level:4},{value:"Functionality Overview",id:"functionality-overview",level:3},{value:"<code>useTrack</code>",id:"usetrack",level:4},{value:"How to Use",id:"how-to-use",level:3},{value:"Conclusion",id:"conclusion",level:3}],p={toc:c},m="wrapper";function u(e){let{components:t,...a}=e;return(0,o.kt)(m,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"location-sharing"},"Location Sharing"),(0,o.kt)("h2",{id:"usetrack-hook-documentation"},(0,o.kt)("inlineCode",{parentName:"h2"},"useTrack")," Hook Documentation"),(0,o.kt)("h3",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"useTrack")," custom hook is designed to facilitate real-time location tracking in React Native applications. Leveraging the power of WebSockets via ",(0,o.kt)("inlineCode",{parentName:"p"},"socket.io-client"),", this hook offers methods to create, join, and leave tracking rooms, broadcast location movements, and maintain a log of messages related to tracking events."),(0,o.kt)("h3",{id:"key-features"},"Key Features"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Real-time Communication"),": Utilizes Socket.IO for real-time bidirectional event-based communication."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Redux Integration"),": Seamlessly integrates with Redux for state management."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Location Sharing"),": Enables users to share their current location in real-time and receive location updates from others."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Dynamic Room Creation"),": Provides functionality to generate unique tracking rooms.")),(0,o.kt)("h3",{id:"data-types"},"Data Types"),(0,o.kt)("h4",{id:"movemessage"},(0,o.kt)("inlineCode",{parentName:"h4"},"MoveMessage")),(0,o.kt)("p",null,"Represents a location update:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"lat"),": Latitude."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"long"),": Longitude."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"roomId"),": The unique identifier for the tracking room."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"type"),": Always set to ",(0,o.kt)("inlineCode",{parentName:"li"},'"move"')," for this type.")),(0,o.kt)("h4",{id:"joinmessage"},(0,o.kt)("inlineCode",{parentName:"h4"},"JoinMessage")),(0,o.kt)("p",null,"Represents a message when a user joins a room:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"message"),": Message content, typically indicating a user has joined."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"type"),": Always set to ",(0,o.kt)("inlineCode",{parentName:"li"},'"join_room"')," for this type.")),(0,o.kt)("h4",{id:"messagedata"},(0,o.kt)("inlineCode",{parentName:"h4"},"MessageData")),(0,o.kt)("p",null,"A union type that could either be ",(0,o.kt)("inlineCode",{parentName:"p"},"MoveMessage")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"JoinMessage"),"."),(0,o.kt)("h3",{id:"functionality-overview"},"Functionality Overview"),(0,o.kt)("h4",{id:"usetrack"},(0,o.kt)("inlineCode",{parentName:"h4"},"useTrack")),(0,o.kt)("p",null,"This is the main custom hook function which encapsulates all tracking related functionalities:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Socket Connection"),": When a token is available, the hook establishes a socket connection to the server, registering multiple event listeners for various socket events.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Messages"),": An array that logs all received messages related to join events and move events.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Location Broadcasting"),": Whenever a location is updated (and tracking is enabled), the new location is broadcasted to other members of the current tracking room.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Room Management"),": Provides methods to create a new room, join a specified room, leave the current room, and start sharing your location in the room."))),(0,o.kt)("h3",{id:"how-to-use"},"How to Use"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Incorporate the Hook"),":"),(0,o.kt)("p",{parentName:"li"},"In your component, use the ",(0,o.kt)("inlineCode",{parentName:"p"},"useTrack")," hook:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const {\n  isConnected,\n  messages,\n  roomId,\n  joinRoom,\n  handleLeaveRoom,\n  createRoom,\n  startTrackMe,\n  exitRoom,\n  parentLocation,\n} = useTrack();\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Join a Room"),":"),(0,o.kt)("p",{parentName:"li"},"To join a room:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'joinRoom("ROOM_ID_HERE");\n'))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Start Broadcasting Your Location"),":"),(0,o.kt)("p",{parentName:"li"},"After joining, you can start broadcasting your location:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'startTrackMe("ROOM_ID_HERE");\n'))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Leave a Room"),":"),(0,o.kt)("p",{parentName:"li"},"When done with tracking, you can leave the room:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'handleLeaveRoom("ROOM_ID_HERE");\n'))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Create a New Room"),":"),(0,o.kt)("p",{parentName:"li"},"If you want to create a new tracking room:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"createRoom();\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Receive Parent's Location"),":"),(0,o.kt)("p",{parentName:"li"},"You can access the parent's location (if available) using:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const { latitude, longitude } = parentLocation;\n")))),(0,o.kt)("h3",{id:"conclusion"},"Conclusion"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"useTrack")," hook offers a comprehensive solution to real-time location tracking in React Native applications. With an easy-to-use interface and real-time capabilities, it ensures seamless location sharing and monitoring, enhancing the user experience and application functionality."))}u.isMDXComponent=!0}}]);